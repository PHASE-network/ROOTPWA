
Installation instructions for rootpwa:

--- Before you can build rootpwa you need to install the following software:

ROOT: 
  ROOT is available from http://root.cern.ch 
  Version 5.22 or higher is needed 
  and it must have been built with the 
	--enable-mathmore 
	--enable-minuit2 
	options
  If you do not find libMinuit2.so or libMathmore.so in $ROOTSYS/lib then
  you probably need to re-configure ROOT with these options

CMAKE:
  CMake is a cross platform build system available from http://cmake.org/
  Some help can also be found here: http://www.vtk.org/Wiki/CMake_FAQ

BNL PWA software PWA2000:
  pwa2000 is now part of the rootpwa repository. 
  It will be build automatically together with the rest of the code.

  
libconfig:
	We use the config file parser written by Mark A. Lindner available from
	http://www.hyperrealm.com/libconfig/
	Version 1.4
	The installation is straight forward and should work without
	any problems.
	We will provide a copy of the package from 
	http://sourceforge.net/projects/rootpwa/files/



--- Building rootpwa:

1) Set ROOTSYS environment variable to the location 
   where you have installed ROOT 
   (see ROOT documentation for details)
  
   FOR INSTALLATION ON LXPLUS (CERN): 
	Make sure that you have the correct root version: 32bit or 64bit. 
	Beware: A 32bit root will run on a 64bit machine BUT you will
	 fail to link against it on the wrong architecture

2) Set $LIBCONFIG to libconfig toplevel directory
3) Set $ROOTPWA environment variable to the rootpwa toplevel directory 
   (usually trunk)
4) Set
	PATH=$ROOTPWA/build/bin:$PATH
	LD_LIBRARY_PATH=$LIBCONFIG/lib:$ROOTPWA/build/lib:$ROOTSYS/lib:LD_LIBRARY_PATH

We use an out-of-source build strategy. This means that 
the binary files will be created outside of the directories that contain
the source code. CMake is supporting this:

5) create the build-directory: 
	&> cd $ROOTPWA
        &> mkdir build

6) do the build:
	&> cd build
	&> cmake ..   
	&> make 
	&> make test

   The default built option is NONE. The compiler flags which are used are
   defined in the to-level CMakeLists.txt.
   You can choose a different built option with:

	&> cmake -D MAKE_BUILD_TYPE=DEBUG ..

There is no make install needed anymore.

There is a setup.sh script template. You can modify this for future usage
in order to quickly set all the above mentioned variables.

--- Building the html documentation:

Do the following:
   &> doxygen rootpwaDoxyfile.conf
	
The doxygen documentation will be built into the directory
   html-doc/html/

and can be viewed with any browser, e.g.
   &> mozilla html-doc/html/index.html

A recent version of these files will be uploaded regularily on
http://rootpwa.sourceforge.net/

As registered user (with the right permissions) you can upload the documentation as is explained on https://sourceforge.net/apps/trac/sourceforge/wiki/Project%20web