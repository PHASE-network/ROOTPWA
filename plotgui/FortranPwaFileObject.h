///////////////////////////////////////////////////////////////////////////
//
//    Copyright 2010
//
//    This file is part of rootpwa
//
//    rootpwa is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    rootpwa is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with rootpwa.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////
//-------------------------------------------------------------------------
// File and Version Information:
// $Rev:: 644                         $: revision of last commit
// $Author:: sschmeing                $: author of last commit
// $Date:: 2011-02-28 18:50:36 +0100 #$: date of last commit
//
// Description:
//      Header file for the FortranPwaFileObject class that provides
//		functionality to read in fit results and integrals from
//		txt files generated by fortran pwa
//
//
// Author List:
//      Stephan Schmeing          TUM            (original author)
//
//
//-------------------------------------------------------------------------

#ifndef FortranPwaFileObject_H
#define FortranPwaFileObject_H

#include <iostream>
#include <fstream>
#include <string>
#include <map>

#include "FortranPwaFileBase.h"
#include "FortranPwaFileFitResults.h"
#include "FortranPwaFileNormIntegrals.h"
#include "FortranPwaFilePhaseSpaceIntegrals.h"

class FortranPwaFileObject : public FortranPwaFileBase {
private:
	// Variables
	int _Status; ///< Status of the Data ( 0 = default, negative = errors, positive = type of _DataObject
	///< Default
	///< 0		ReadFromFile has not been run yet
	///< Type
	///< 1		PWA fit results
	///< 2		PWA phase space integrals
	///< 3		PWA acceptance corrected norm integrals
	///< 4		PWA not acceptance corrected norm integrals
	///< Errors
	///< -1		File could not be open
	///< -2		File not of any known type
	///< -3		Unexpected end of file or reading error
	///< -4		Mass bin not valid
	///< -5		t' bin not valid
	///< -6		Number of waves not correct
	///< -7		Error reading a phase space integral line
	///< -8		Two waves with the same name in the file
	///< -9		Error reading a wave name line
	///< -10	Less wave names found than specified
	///< -11	More wave names found than specified
	///< -12	Row of integral matrix has too many entries
	///< -13	Row of integral matrix has not enough entries
	///< -14	Integral matrix has too many rows
	///< -15	Integral matrix has not enough rows
	///< -16	Error reading a norm integral line
	///< -17	Number of events not correct
	///< -18	log(likelihood) not correct
	///< -19	Number of reflectivity sections not correct
	///< -20	Rank not correct
	///< -21	Ranks not consistent
	///< -22	Error reading a fit result line
	const void *_DataObject;
	///< (const FortranPwaFileFitResults *) for fit results
	///< (const FortranPwaFilePhaseSpaceIntegrals *) for phase space integrals
	///< (const FortranPwaFileNormIntegrals *) for norm integrals ( acceptance corrected and not acceptance corrected)
	float _MassBinStart;
	float _MassBinEnd;
	float _tBinStart;
	float _tBinEnd;

	// Functions
	int ReadBinFromFile( std::basic_istream<char>& File ); ///< Reads the mass and t' bin from file
	int ReadFitResultFromFile( std::basic_istream<char>& File ); ///< Reads the rest of the information from a fit result file
	int ReadPhaseSpaceIntegralsFromFile( std::basic_istream<char>& File ); ///< Reads the rest of the information from a phase space integral file
	int ReadAcceptanceCorrectedNormIntegralsFromFile( std::basic_istream<char>& File ); ///< Reads the rest of the information from a acceptance corrected norm integrals file
	int ReadNotAcceptanceCorrectedNormIntegralsFromFile( std::basic_istream<char>& File ); ///< Reads the rest of the information from a non acceptance corrected norm integrals file

public:
	// Constructors + Destructors
	FortranPwaFileObject( void ); ///< Constructor

	// Get && Set
	int Status( void ) const; ///< Returns _Status;
	std::string StatusMessage( void ) const; ///< Returns _Status as a string containing the corresponding message

	// Functions
	int ReadFromFile( const char *FileString ); ///< Reading in the given file by determining it's type and calling the appropriate function to read in this type
	void Clear( void ); ///< Clears the file object and calls destructor of the _DataObject
	void Print( void ) const; ///< Prints all important variables of class
};

#endif /* FortranPwaFileObject_H */
