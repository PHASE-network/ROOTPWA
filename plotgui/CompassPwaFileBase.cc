///////////////////////////////////////////////////////////////////////////
//
//    Copyright 2010
//
//    This file is part of rootpwa
//
//    rootpwa is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    rootpwa is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with rootpwa.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////
//-------------------------------------------------------------------------
// File and Version Information:
// $Rev::                             $: revision of last commit
// $Author::                          $: author of last commit
// $Date::                            $: date of last commit
//
// Description:
//      Code file for the CompassPwaFileBase class that provides
//		functionality to doubleread in the next valid line of a txt file
//		generated by Compass pwa and passes it to all CompassPWAFile
//		classes
//
//
// Author List:
//      Stephan Schmeing          TUM            (original author)
//
//
//-------------------------------------------------------------------------

#include "reportingUtils.hpp"

#include "CompassPwaFileBase.h"

using namespace std;
using namespace rpwa;

bool CompassPwaFileBase::_Debug = false;

// Reads the next line of File which has no "//" as the first two letters and returns true if it was successful
bool CompassPwaFileBase::GetNextValidLine( istream& File, string& Line ){
	while( File.good() ){
		getline( File, Line );

		if( ( '/' != Line[0] ) || ( '/' != Line[1] ) ){
			return true;
		}
	}

	return false;
}

bool CompassPwaFileBase::GetNextValidLine( istream& File, stringstream& Line ){
	string TmpLine;

	if( GetNextValidLine( File, TmpLine ) ){
		Line.str( TmpLine );
		Line.clear();
		Line.seekg(0);
		return true;
	}
	else{
		return false;
	}
}
