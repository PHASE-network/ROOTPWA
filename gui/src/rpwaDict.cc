//
// File generated by rootcint at Wed Feb  9 14:43:13 2011

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "rpwaDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TrpwaFitOptionsFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TrpwaFitOptionsFrame(void *p);
   static void deleteArray_TrpwaFitOptionsFrame(void *p);
   static void destruct_TrpwaFitOptionsFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrpwaFitOptionsFrame*)
   {
      ::TrpwaFitOptionsFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrpwaFitOptionsFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrpwaFitOptionsFrame", ::TrpwaFitOptionsFrame::Class_Version(), "../src/TrpwaFitOptionsFrame.h", 38,
                  typeid(::TrpwaFitOptionsFrame), DefineBehavior(ptr, ptr),
                  &::TrpwaFitOptionsFrame::Dictionary, isa_proxy, 0,
                  sizeof(::TrpwaFitOptionsFrame) );
      instance.SetDelete(&delete_TrpwaFitOptionsFrame);
      instance.SetDeleteArray(&deleteArray_TrpwaFitOptionsFrame);
      instance.SetDestructor(&destruct_TrpwaFitOptionsFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrpwaFitOptionsFrame*)
   {
      return GenerateInitInstanceLocal((::TrpwaFitOptionsFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrpwaFitOptionsFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TrpwaWaveSelectFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TrpwaWaveSelectFrame(void *p);
   static void deleteArray_TrpwaWaveSelectFrame(void *p);
   static void destruct_TrpwaWaveSelectFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrpwaWaveSelectFrame*)
   {
      ::TrpwaWaveSelectFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrpwaWaveSelectFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrpwaWaveSelectFrame", ::TrpwaWaveSelectFrame::Class_Version(), "../src/TrpwaWaveSelectFrame.h", 29,
                  typeid(::TrpwaWaveSelectFrame), DefineBehavior(ptr, ptr),
                  &::TrpwaWaveSelectFrame::Dictionary, isa_proxy, 0,
                  sizeof(::TrpwaWaveSelectFrame) );
      instance.SetDelete(&delete_TrpwaWaveSelectFrame);
      instance.SetDeleteArray(&deleteArray_TrpwaWaveSelectFrame);
      instance.SetDestructor(&destruct_TrpwaWaveSelectFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrpwaWaveSelectFrame*)
   {
      return GenerateInitInstanceLocal((::TrpwaWaveSelectFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrpwaWaveSelectFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TrpwaPlotAmpsFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TrpwaPlotAmpsFrame(void *p);
   static void deleteArray_TrpwaPlotAmpsFrame(void *p);
   static void destruct_TrpwaPlotAmpsFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrpwaPlotAmpsFrame*)
   {
      ::TrpwaPlotAmpsFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrpwaPlotAmpsFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrpwaPlotAmpsFrame", ::TrpwaPlotAmpsFrame::Class_Version(), "../src/TrpwaPlotAmpsFrame.h", 180,
                  typeid(::TrpwaPlotAmpsFrame), DefineBehavior(ptr, ptr),
                  &::TrpwaPlotAmpsFrame::Dictionary, isa_proxy, 0,
                  sizeof(::TrpwaPlotAmpsFrame) );
      instance.SetDelete(&delete_TrpwaPlotAmpsFrame);
      instance.SetDeleteArray(&deleteArray_TrpwaPlotAmpsFrame);
      instance.SetDestructor(&destruct_TrpwaPlotAmpsFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrpwaPlotAmpsFrame*)
   {
      return GenerateInitInstanceLocal((::TrpwaPlotAmpsFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrpwaPlotAmpsFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TrpwaMainFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrpwaMainFrame*)
   {
      ::TrpwaMainFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrpwaMainFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrpwaMainFrame", ::TrpwaMainFrame::Class_Version(), "../src/TrpwaMainFrame.h", 32,
                  typeid(::TrpwaMainFrame), DefineBehavior(ptr, ptr),
                  &::TrpwaMainFrame::Dictionary, isa_proxy, 0,
                  sizeof(::TrpwaMainFrame) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrpwaMainFrame*)
   {
      return GenerateInitInstanceLocal((::TrpwaMainFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrpwaMainFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TrpwaFitOptionsFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrpwaFitOptionsFrame::Class_Name()
{
   return "TrpwaFitOptionsFrame";
}

//______________________________________________________________________________
const char *TrpwaFitOptionsFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaFitOptionsFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrpwaFitOptionsFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaFitOptionsFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrpwaFitOptionsFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaFitOptionsFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrpwaFitOptionsFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaFitOptionsFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TrpwaWaveSelectFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrpwaWaveSelectFrame::Class_Name()
{
   return "TrpwaWaveSelectFrame";
}

//______________________________________________________________________________
const char *TrpwaWaveSelectFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaWaveSelectFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrpwaWaveSelectFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaWaveSelectFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrpwaWaveSelectFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaWaveSelectFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrpwaWaveSelectFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaWaveSelectFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TrpwaPlotAmpsFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrpwaPlotAmpsFrame::Class_Name()
{
   return "TrpwaPlotAmpsFrame";
}

//______________________________________________________________________________
const char *TrpwaPlotAmpsFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaPlotAmpsFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrpwaPlotAmpsFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaPlotAmpsFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrpwaPlotAmpsFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaPlotAmpsFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrpwaPlotAmpsFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaPlotAmpsFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TrpwaMainFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrpwaMainFrame::Class_Name()
{
   return "TrpwaMainFrame";
}

//______________________________________________________________________________
const char *TrpwaMainFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaMainFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrpwaMainFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrpwaMainFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrpwaMainFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaMainFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrpwaMainFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrpwaMainFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TrpwaMainFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrpwaMainFrame.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TrpwaMainFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TrpwaMainFrame.
      TClass *R__cl = ::TrpwaMainFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fEcanvas", &fEcanvas);
      R__insp.Inspect(R__cl, R__parent, "*steplist", &steplist);
      R__insp.Inspect(R__cl, R__parent, "*frame_session_options", &frame_session_options);
      R__insp.Inspect(R__cl, R__parent, "progressbars", (void*)&progressbars);
      ::ROOT::GenericShowMembers("vector<TGProgressBar*>", (void*)&progressbars, R__insp, strcat(R__parent,"progressbars."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "stepbuttons", (void*)&stepbuttons);
      ::ROOT::GenericShowMembers("vector<TGTextButton*>", (void*)&stepbuttons, R__insp, strcat(R__parent,"stepbuttons."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*current_session", &current_session);
      R__insp.Inspect(R__cl, R__parent, "*frame_wave_select", &frame_wave_select);
      R__insp.Inspect(R__cl, R__parent, "*frame_plot_amps", &frame_plot_amps);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
} // end of namespace ROOT for class ::TrpwaMainFrame

//______________________________________________________________________________
void TrpwaWaveSelectFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrpwaWaveSelectFrame.

   TGTransientFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TrpwaWaveSelectFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TrpwaWaveSelectFrame.
      TClass *R__cl = ::TrpwaWaveSelectFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_waveselections", &_waveselections);
      R__insp.Inspect(R__cl, R__parent, "_selected_bin", &_selected_bin);
      R__insp.Inspect(R__cl, R__parent, "*_button_allbins", &_button_allbins);
      R__insp.Inspect(R__cl, R__parent, "*_copybinbutton", &_copybinbutton);
      R__insp.Inspect(R__cl, R__parent, "*_filter_box", &_filter_box);
      R__insp.Inspect(R__cl, R__parent, "_buttons_binselection", (void*)&_buttons_binselection);
      ::ROOT::GenericShowMembers("vector<TGTextButton*>", (void*)&_buttons_binselection, R__insp, strcat(R__parent,"_buttons_binselection."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_buttons_waveselection", (void*)&_buttons_waveselection);
      ::ROOT::GenericShowMembers("vector<TGTextButton*>", (void*)&_buttons_waveselection, R__insp, strcat(R__parent,"_buttons_waveselection."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_buttons_waveselection_by_JP", (void*)&_buttons_waveselection_by_JP);
      ::ROOT::GenericShowMembers("map<int,vector<TGTextButton*> >", (void*)&_buttons_waveselection_by_JP, R__insp, strcat(R__parent,"_buttons_waveselection_by_JP."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_buttons_waveselection_by_Mrefl", (void*)&_buttons_waveselection_by_Mrefl);
      ::ROOT::GenericShowMembers("map<int,vector<TGTextButton*> >", (void*)&_buttons_waveselection_by_Mrefl, R__insp, strcat(R__parent,"_buttons_waveselection_by_Mrefl."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_buttons_waveselection_by_lorb", (void*)&_buttons_waveselection_by_lorb);
      ::ROOT::GenericShowMembers("map<int,vector<TGTextButton*> >", (void*)&_buttons_waveselection_by_lorb, R__insp, strcat(R__parent,"_buttons_waveselection_by_lorb."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_buttons_waveselection_by_iso1", (void*)&_buttons_waveselection_by_iso1);
      ::ROOT::GenericShowMembers("map<string,vector<TGTextButton*> >", (void*)&_buttons_waveselection_by_iso1, R__insp, strcat(R__parent,"_buttons_waveselection_by_iso1."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_buttons_waveselection_by_iso2", (void*)&_buttons_waveselection_by_iso2);
      ::ROOT::GenericShowMembers("map<string,vector<TGTextButton*> >", (void*)&_buttons_waveselection_by_iso2, R__insp, strcat(R__parent,"_buttons_waveselection_by_iso2."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*_select_button", &_select_button);
      R__insp.Inspect(R__cl, R__parent, "*_deselect_button", &_deselect_button);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TrpwaWaveSelectFrame(void *p) {
      delete ((::TrpwaWaveSelectFrame*)p);
   }
   static void deleteArray_TrpwaWaveSelectFrame(void *p) {
      delete [] ((::TrpwaWaveSelectFrame*)p);
   }
   static void destruct_TrpwaWaveSelectFrame(void *p) {
      typedef ::TrpwaWaveSelectFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrpwaWaveSelectFrame

//______________________________________________________________________________
void TrpwaPlotAmpsFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrpwaPlotAmpsFrame.

   TGTransientFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TrpwaPlotAmpsFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TrpwaPlotAmpsFrame.
      TClass *R__cl = ::TrpwaPlotAmpsFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*canvas_selected_waves", &canvas_selected_waves);
      R__insp.Inspect(R__cl, R__parent, "*plotted_graphs[5]", &plotted_graphs);
      R__insp.Inspect(R__cl, R__parent, "*plotted_most_likely_graphs[5]", &plotted_most_likely_graphs);
      R__insp.Inspect(R__cl, R__parent, "draw_most_likely", &draw_most_likely);
      R__insp.Inspect(R__cl, R__parent, "masscutlow", &masscutlow);
      R__insp.Inspect(R__cl, R__parent, "masscuthigh", &masscuthigh);
      R__insp.Inspect(R__cl, R__parent, "*box_available_fits", &box_available_fits);
      R__insp.Inspect(R__cl, R__parent, "*box_selected_fits", &box_selected_fits);
      R__insp.Inspect(R__cl, R__parent, "*box_available_waves", &box_available_waves);
      R__insp.Inspect(R__cl, R__parent, "*box_available_anchor_waves", &box_available_anchor_waves);
      R__insp.Inspect(R__cl, R__parent, "*slider_mass_range", &slider_mass_range);
      R__insp.Inspect(R__cl, R__parent, "*button_show_most_likely", &button_show_most_likely);
      R__insp.Inspect(R__cl, R__parent, "available_fit_results", (void*)&available_fit_results);
      ::ROOT::GenericShowMembers("Tfilemap", (void*)&available_fit_results, R__insp, strcat(R__parent,"available_fit_results."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "selected_fit_results", (void*)&selected_fit_results);
      ::ROOT::GenericShowMembers("Tfilemap", (void*)&selected_fit_results, R__insp, strcat(R__parent,"selected_fit_results."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*current_fit_result", &current_fit_result);
      R__insp.Inspect(R__cl, R__parent, "selected_fit_result_graphs", (void*)&selected_fit_result_graphs);
      ::ROOT::GenericShowMembers("Tfitresultmap", (void*)&selected_fit_result_graphs, R__insp, strcat(R__parent,"selected_fit_result_graphs."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "available_waves", (void*)&available_waves);
      ::ROOT::GenericShowMembers("Twavemap", (void*)&available_waves, R__insp, strcat(R__parent,"available_waves."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "current_wave", (void*)&current_wave);
      ::ROOT::GenericShowMembers("string", (void*)&current_wave, R__insp, strcat(R__parent,"current_wave."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "current_anchor_wave", (void*)&current_anchor_wave);
      ::ROOT::GenericShowMembers("string", (void*)&current_anchor_wave, R__insp, strcat(R__parent,"current_anchor_wave."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "available_colors", (void*)&available_colors);
      ::ROOT::GenericShowMembers("vector<TColor_struct>", (void*)&available_colors, R__insp, strcat(R__parent,"available_colors."),false);
      R__parent[R__ncp] = 0;
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TrpwaPlotAmpsFrame(void *p) {
      delete ((::TrpwaPlotAmpsFrame*)p);
   }
   static void deleteArray_TrpwaPlotAmpsFrame(void *p) {
      delete [] ((::TrpwaPlotAmpsFrame*)p);
   }
   static void destruct_TrpwaPlotAmpsFrame(void *p) {
      typedef ::TrpwaPlotAmpsFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrpwaPlotAmpsFrame

//______________________________________________________________________________
void TrpwaFitOptionsFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrpwaFitOptionsFrame.

   TGTransientFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TrpwaFitOptionsFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TrpwaFitOptionsFrame.
      TClass *R__cl = ::TrpwaFitOptionsFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_fit_options", &_fit_options);
      R__insp.Inspect(R__cl, R__parent, "*entry_seed", &entry_seed);
      R__insp.Inspect(R__cl, R__parent, "*entry_nfits", &entry_nfits);
      R__insp.Inspect(R__cl, R__parent, "*entry_rank", &entry_rank);
      R__insp.Inspect(R__cl, R__parent, "*entry_title", &entry_title);
      R__insp.Inspect(R__cl, R__parent, "*entry_description", &entry_description);
      R__insp.Inspect(R__cl, R__parent, "*button_use_normalization", &button_use_normalization);
      R__insp.Inspect(R__cl, R__parent, "*button_fit_consecutive", &button_fit_consecutive);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TrpwaFitOptionsFrame(void *p) {
      delete ((::TrpwaFitOptionsFrame*)p);
   }
   static void deleteArray_TrpwaFitOptionsFrame(void *p) {
      delete [] ((::TrpwaFitOptionsFrame*)p);
   }
   static void destruct_TrpwaFitOptionsFrame(void *p) {
      typedef ::TrpwaFitOptionsFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrpwaFitOptionsFrame

/********************************************************
* ../src/rpwaDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablerpwaDict();

extern "C" void G__set_cpp_environmentrpwaDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../src/TrpwaFitOptionsFrame.h");
  G__add_compiledheader("../src/TrpwaMainFrame.h");
  G__add_compiledheader("../src/TrpwaPlotAmpsFrame.h");
  G__add_compiledheader("../src/TrpwaWaveSelectFrame.h");
  G__cpp_reset_tagtablerpwaDict();
}
#include <new>
extern "C" int G__cpp_dllrevrpwaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TrpwaFitOptionsFrame */
static int G__rpwaDict_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrpwaFitOptionsFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TrpwaFitOptionsFrame(*(Tfit_options*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TrpwaFitOptionsFrame(*(Tfit_options*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrpwaFitOptionsFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaFitOptionsFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrpwaFitOptionsFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrpwaFitOptionsFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaFitOptionsFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaFitOptionsFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaFitOptionsFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaFitOptionsFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaFitOptionsFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaFitOptionsFrame*) G__getstructoffset())->SetOptions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaFitOptionsFrame*) G__getstructoffset())->CallSetOptions((long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TrpwaFitOptionsFrame*) G__getstructoffset())->CallSetOptions((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TrpwaFitOptionsFrame*) G__getstructoffset())->CallSetOptions();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrpwaFitOptionsFrame G__TTrpwaFitOptionsFrame;
static int G__rpwaDict_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrpwaFitOptionsFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrpwaFitOptionsFrame*) (soff+(sizeof(TrpwaFitOptionsFrame)*i)))->~G__TTrpwaFitOptionsFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrpwaFitOptionsFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrpwaFitOptionsFrame*) (soff))->~G__TTrpwaFitOptionsFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrpwaWaveSelectFrame */
static int G__rpwaDict_651_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrpwaWaveSelectFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TrpwaWaveSelectFrame(*(TWaveSelections*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TrpwaWaveSelectFrame(*(TWaveSelections*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->Build();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->BinSelectClick();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->WaveSelectClick();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->FilterSelectClick((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->SelectFiltered();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->UnselectFiltered();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrpwaWaveSelectFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaWaveSelectFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrpwaWaveSelectFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrpwaWaveSelectFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaWaveSelectFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaWaveSelectFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaWaveSelectFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaWaveSelectFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_651_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaWaveSelectFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrpwaWaveSelectFrame G__TTrpwaWaveSelectFrame;
static int G__rpwaDict_651_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrpwaWaveSelectFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrpwaWaveSelectFrame*) (soff+(sizeof(TrpwaWaveSelectFrame)*i)))->~G__TTrpwaWaveSelectFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrpwaWaveSelectFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrpwaWaveSelectFrame*) (soff))->~G__TTrpwaWaveSelectFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrpwaPlotAmpsFrame */
static int G__rpwaDict_862_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrpwaPlotAmpsFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TrpwaPlotAmpsFrame(
*((vector<string>*) G__int(libp->para[0])), *((vector<string>*) G__int(libp->para[1]))
, *((vector<string>*) G__int(libp->para[2])));
   } else {
     p = new((void*) gvp) TrpwaPlotAmpsFrame(
*((vector<string>*) G__int(libp->para[0])), *((vector<string>*) G__int(libp->para[1]))
, *((vector<string>*) G__int(libp->para[2])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Build();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Add_Fit((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Remove_Fit((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Select_Wave((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Select_Anchor_Wave((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Set_show_most_likely();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Plot_All_selected();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Plot_All_selected_Spin_totals();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Plot_selected_wave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Save_plot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->Set_Mass_range();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrpwaPlotAmpsFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaPlotAmpsFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrpwaPlotAmpsFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrpwaPlotAmpsFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaPlotAmpsFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaPlotAmpsFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaPlotAmpsFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaPlotAmpsFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_862_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaPlotAmpsFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrpwaPlotAmpsFrame G__TTrpwaPlotAmpsFrame;
static int G__rpwaDict_862_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrpwaPlotAmpsFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrpwaPlotAmpsFrame*) (soff+(sizeof(TrpwaPlotAmpsFrame)*i)))->~G__TTrpwaPlotAmpsFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrpwaPlotAmpsFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrpwaPlotAmpsFrame*) (soff))->~G__TTrpwaPlotAmpsFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrpwaMainFrame */
static int G__rpwaDict_867_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TrpwaMainFrame& obj = TrpwaMainFrame::Instance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->CheckStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->NewSession();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->SaveSession();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->SaveSessionAs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->LoadSession();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->SelectWaves();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->FitPartialWaves();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->ShowFitResults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->GenKeys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->CalcAmps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->IntAmps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->FilterData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->SetupWorkspace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->FillFlatPhaseSpaceEvents();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->Dummy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrpwaMainFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaMainFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrpwaMainFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrpwaMainFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrpwaMainFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaMainFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaMainFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrpwaMainFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rpwaDict_867_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrpwaMainFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TrpwaFitOptionsFrame */

/* TrpwaWaveSelectFrame */

/* TrpwaPlotAmpsFrame */

/* TrpwaMainFrame */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncrpwaDict {
 public:
  G__Sizep2memfuncrpwaDict(): p(&G__Sizep2memfuncrpwaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncrpwaDict::*p)();
};

size_t G__get_sizep2memfuncrpwaDict()
{
  G__Sizep2memfuncrpwaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancerpwaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame))) {
     TrpwaFitOptionsFrame *G__Lderived;
     G__Lderived=(TrpwaFitOptionsFrame*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame))) {
     TrpwaWaveSelectFrame *G__Lderived;
     G__Lderived=(TrpwaWaveSelectFrame*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),G__get_linked_tagnum(&G__rpwaDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame))) {
     TrpwaPlotAmpsFrame *G__Lderived;
     G__Lderived=(TrpwaPlotAmpsFrame*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),G__get_linked_tagnum(&G__rpwaDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame))) {
     TrpwaMainFrame *G__Lderived;
     G__Lderived=(TrpwaMainFrame*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),G__get_linked_tagnum(&G__rpwaDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablerpwaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TrpwaBinInfo>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOTrpwaBinInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOTrpwaBinInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TrpwaBinInfo,less<int> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOTrpwaBinInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOTrpwaBinInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> >,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TWaveSelection>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TWaveSelections",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGTextButton*>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TGTextButton*> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TGTextButton*,allocator<TGTextButton*> > >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TGTextButton*,allocator<TGTextButton*> >,less<int> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TGTextButton*> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TGTextButton*,allocator<TGTextButton*> > >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TGTextButton*,allocator<TGTextButton*> >,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__rpwaDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__rpwaDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TTree*>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TTree*,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> >,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Tphasegraph>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTphasegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTphasegraphgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Tphasegraph,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTphasegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTphasegraphgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TGraphErrors*>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTGraphErrorsmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTGraphErrorsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TGraphErrors*,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTGraphErrorsmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTGraphErrorsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Twavegraph>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTwavegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTwavegraphgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Twavegraph,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTwavegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTwavegraphgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Tfitresult*>",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTfitresultmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTfitresultmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Tfitresult*,less<string> >",117,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTfitresultmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTfitresultmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TColor_struct>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETColor_structcOallocatorlETColor_structgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETColor_structcOallocatorlETColor_structgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGProgressBar*>",117,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rpwaDictLN_reverse_iteratorlEvectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TrpwaFitOptionsFrame */
static void G__setup_memvarTrpwaFitOptionsFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame));
   { TrpwaFitOptionsFrame *p; p=(TrpwaFitOptionsFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_Tfit_options),-1,-1,4,"_fit_options=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGNumberEntry),-1,-1,4,"entry_seed=",0,"user number for seed is set here");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGNumberEntry),-1,-1,4,"entry_nfits=",0,"number of fits per bin set");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGNumberEntry),-1,-1,4,"entry_rank=",0,"rank of fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGTextEntry),-1,-1,4,"entry_title=",0,"title of the fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGTextEntry),-1,-1,4,"entry_description=",0,"description of the fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGCheckButton),-1,-1,4,"button_use_normalization=",0,"whether to use the normalization integral");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGCheckButton),-1,-1,4,"button_fit_consecutive=",0,"whether to use fit results from previous fit (one job per fit iteration)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrpwaWaveSelectFrame */
static void G__setup_memvarTrpwaWaveSelectFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame));
   { TrpwaWaveSelectFrame *p; p=(TrpwaWaveSelectFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR),G__defined_typename("TWaveSelections"),-1,4,"_waveselections=",0,"set and selected waves");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_selected_bin=",0,"-1 if all bins");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGButton),-1,-1,4,"_button_allbins=",0,"reference to button with all bins");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGButton),-1,-1,4,"_copybinbutton=",0,"reference to button to copy bins");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGComboBox),-1,-1,4,"_filter_box=",0,"combobox with filters to select");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR),G__defined_typename("vector<TGTextButton*>"),-1,4,"_buttons_binselection=",0,"holds the buttons to all bins");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR),G__defined_typename("vector<TGTextButton*>"),-1,4,"_buttons_waveselection=",0,"holds the buttons to all waves");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<TGTextButton*> >"),-1,4,"_buttons_waveselection_by_JP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<TGTextButton*> >"),-1,4,"_buttons_waveselection_by_Mrefl=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<TGTextButton*> >"),-1,4,"_buttons_waveselection_by_lorb=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<string,vector<TGTextButton*> >"),-1,4,"_buttons_waveselection_by_iso1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<string,vector<TGTextButton*> >"),-1,4,"_buttons_waveselection_by_iso2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGTextButton),-1,-1,4,"_select_button=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGTextButton),-1,-1,4,"_deselect_button=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrpwaPlotAmpsFrame */
static void G__setup_memvarTrpwaPlotAmpsFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame));
   { TrpwaPlotAmpsFrame *p; p=(TrpwaPlotAmpsFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TCanvas),-1,-1,4,"canvas_selected_waves=",0,"canvas with drawn objects divided into 4 pads");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TMultiGraph),-1,-1,4,"plotted_graphs[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TMultiGraph),-1,-1,4,"plotted_most_likely_graphs[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"draw_most_likely=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"masscutlow=",0,"current valid low  range cut of plotted waves");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"masscuthigh=",0,"current valid high range cut of plotted waves");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGComboBox),-1,-1,4,"box_available_fits=",0,"box with available fits, item index is a pointer to the file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGComboBox),-1,-1,4,"box_selected_fits=",0,"box with selected  fits, item index is a pointer to the file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGComboBox),-1,-1,4,"box_available_waves=",0,"box with available waves to select, item is a pointer to the wave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGComboBox),-1,-1,4,"box_available_anchor_waves=",0,"box with available waves to select, item is a pointer to the wave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGDoubleHSlider),-1,-1,4,"slider_mass_range=",0,"common selected mass range for plotting");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGCheckButton),-1,-1,4,"button_show_most_likely=",0,"set the state to draw the most likely solution");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR),G__defined_typename("Tfilemap"),-1,4,"available_fit_results=",0,"map with title as key and a pointer to an opened Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR),G__defined_typename("Tfilemap"),-1,4,"selected_fit_results=",0,"map with title as key and a pointer to an opened Tree selected by the user");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TTree),-1,-1,4,"current_fit_result=",0,"pointer to the fit selected in the list of selected fit results");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOTfitresultmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTfitresultmUgRsPgRsPgR),G__defined_typename("Tfitresultmap"),-1,4,"selected_fit_result_graphs=",0,"map with title as key and the many created graphs with intensities, phases and so on");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),G__defined_typename("Twavemap"),-1,4,"available_waves=",0,"map with the wave name as key and a vector with references to the selected_fit_results as indexes starting from 0");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_string),-1,-1,4,"current_wave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_string),-1,-1,4,"current_anchor_wave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR),G__defined_typename("vector<TColor_struct>"),-1,4,"available_colors=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrpwaMainFrame */
static void G__setup_memvarTrpwaMainFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame));
   { TrpwaMainFrame *p; p=(TrpwaMainFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),-1,-2,4,"pInstance=",0,"singleton reference");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGVerticalFrame),-1,-1,4,"steplist=",0,"frame holding frames for each step");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TGGroupFrame),-1,-1,4,"frame_session_options=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR),G__defined_typename("vector<TGProgressBar*>"),-1,4,"progressbars=",0,"references to the progress bars");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR),G__defined_typename("vector<TGTextButton*>"),-1,4,"stepbuttons=",0,"references to the buttons calling the step procedures");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaSessionManager),-1,-1,4,"current_session=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),-1,-1,4,"frame_wave_select=",0,"window for wave selection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),-1,-1,4,"frame_plot_amps=",0,"window to look at results");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rpwaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarrpwaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTrpwaFitOptionsFrame(void) {
   /* TrpwaFitOptionsFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame));
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrpwaFitOptionsFrame",2056,G__rpwaDict_530_0_2, 105, G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame), -1, 0, 1, 1, 1, 0, "u 'Tfit_options' - 1 - fit_options", "will be set by the user", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rpwaDict_530_0_3, 85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrpwaFitOptionsFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rpwaDict_530_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaFitOptionsFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rpwaDict_530_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrpwaFitOptionsFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rpwaDict_530_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrpwaFitOptionsFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rpwaDict_530_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rpwaDict_530_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaFitOptionsFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rpwaDict_530_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaFitOptionsFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rpwaDict_530_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaFitOptionsFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rpwaDict_530_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaFitOptionsFrame::DeclFileLine) ), 0);
   G__memfunc_setup("SetOptions",1048,G__rpwaDict_530_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", "read all options set by the user", (void*) NULL, 0);
   G__memfunc_setup("CallSetOptions",1428,G__rpwaDict_530_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 0 - value", "calls only SetOptions for number entries", (void*) NULL, 0);
   G__memfunc_setup("CallSetOptions",1428,G__rpwaDict_530_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' text", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrpwaFitOptionsFrame", 2182, G__rpwaDict_530_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrpwaWaveSelectFrame(void) {
   /* TrpwaWaveSelectFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame));
   G__memfunc_setup("UpdateWaveButtons",1765,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyWaveSelection",1748,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - frombin i - - 0 - tobin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrpwaWaveSelectFrame",2028,G__rpwaDict_651_0_3, 105, G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame), -1, 0, 1, 1, 1, 0, "u 'vector<TWaveSelection,allocator<TWaveSelection> >' 'TWaveSelections' 1 - waveselections", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__rpwaDict_651_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinSelectClick",1375,G__rpwaDict_651_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WaveSelectClick",1497,G__rpwaDict_651_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterSelectClick",1708,G__rpwaDict_651_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - selection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectFiltered",1423,G__rpwaDict_651_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnselectFiltered",1650,G__rpwaDict_651_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rpwaDict_651_0_10, 85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrpwaWaveSelectFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rpwaDict_651_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaWaveSelectFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rpwaDict_651_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrpwaWaveSelectFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rpwaDict_651_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrpwaWaveSelectFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rpwaDict_651_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rpwaDict_651_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaWaveSelectFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rpwaDict_651_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaWaveSelectFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rpwaDict_651_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaWaveSelectFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rpwaDict_651_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaWaveSelectFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TrpwaWaveSelectFrame", 2154, G__rpwaDict_651_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrpwaPlotAmpsFrame(void) {
   /* TrpwaPlotAmpsFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame));
   G__memfunc_setup("Add_Fit_Result",1385,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - fit_result_path u 'string' - 0 - fit_result_title "
"u 'string' - 0 - fit_result_description", "description of the fit", (void*) NULL, 0);
   G__memfunc_setup("Get_Icon",776,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__rpwaDictLN_TGPicture), -1, 0, 2, 1, 4, 1, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - fit_references g - - 0 'true' divide", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create_available_colors",2373,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrpwaPlotAmpsFrame",1833,G__rpwaDict_862_0_4, 105, G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame), -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - fit_result_paths u 'vector<string,allocator<string> >' 'vector<string>' 0 - fit_result_titles "
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - fit_result_descriptions", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__rpwaDict_862_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add_Fit",651,G__rpwaDict_862_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pFitFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove_Fit",1008,G__rpwaDict_862_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pFitFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Select_Wave",1106,G__rpwaDict_862_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pWave", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Select_Anchor_Wave",1804,G__rpwaDict_862_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pWave", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set_show_most_likely",2135,G__rpwaDict_862_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Plot_All_selected",1727,G__rpwaDict_862_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Plot_All_selected_Spin_totals",2990,G__rpwaDict_862_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Plot_selected_wave",1881,G__rpwaDict_862_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save_plot",941,G__rpwaDict_862_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set_Mass_range",1419,G__rpwaDict_862_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rpwaDict_862_0_16, 85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrpwaPlotAmpsFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rpwaDict_862_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaPlotAmpsFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rpwaDict_862_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrpwaPlotAmpsFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rpwaDict_862_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrpwaPlotAmpsFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rpwaDict_862_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rpwaDict_862_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaPlotAmpsFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rpwaDict_862_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaPlotAmpsFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rpwaDict_862_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaPlotAmpsFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rpwaDict_862_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaPlotAmpsFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TrpwaPlotAmpsFrame", 1959, G__rpwaDict_862_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrpwaMainFrame(void) {
   /* TrpwaMainFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame));
   G__memfunc_setup("TrpwaMainFrame",1406,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame), -1, 0, 3, 1, 4, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__rpwaDict_867_0_3, 117, G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TrpwaMainFrame& (*)())(&TrpwaMainFrame::Instance) ), 0);
   G__memfunc_setup("CheckStatus",1122,G__rpwaDict_867_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewSession",1038,G__rpwaDict_867_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveSession",1139,G__rpwaDict_867_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveSessionAs",1319,G__rpwaDict_867_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadSession",1124,G__rpwaDict_867_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__rpwaDict_867_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "override to call the application abortion", (void*) NULL, 1);
   G__memfunc_setup("SelectWaves",1126,G__rpwaDict_867_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "calls the interface for wave selection", (void*) NULL, 0);
   G__memfunc_setup("FitPartialWaves",1526,G__rpwaDict_867_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "send jobs for partial wave fitting", (void*) NULL, 0);
   G__memfunc_setup("ShowFitResults",1462,G__rpwaDict_867_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "send a command to show the available fit results", (void*) NULL, 0);
   G__memfunc_setup("GenKeys",694,G__rpwaDict_867_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "send a command to generate the key files", (void*) NULL, 0);
   G__memfunc_setup("CalcAmps",772,G__rpwaDict_867_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", "send jobs to calculate amplitudes", (void*) NULL, 0);
   G__memfunc_setup("IntAmps",700,G__rpwaDict_867_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "send jobs to integrate available amplitudes", (void*) NULL, 0);
   G__memfunc_setup("FilterData",992,G__rpwaDict_867_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", "filter data given by root files", (void*) NULL, 0);
   G__memfunc_setup("SetupWorkspace",1472,G__rpwaDict_867_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "Setup workspace as specified in the init file", (void*) NULL, 0);
   G__memfunc_setup("FillFlatPhaseSpaceEvents",2400,G__rpwaDict_867_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "calling flat phase space generator bin by bin", (void*) NULL, 0);
   G__memfunc_setup("Dummy",524,G__rpwaDict_867_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", "will be called for every function not implemented yet", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rpwaDict_867_0_21, 85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrpwaMainFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rpwaDict_867_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaMainFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rpwaDict_867_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrpwaMainFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rpwaDict_867_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrpwaMainFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rpwaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rpwaDict_867_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rpwaDict_867_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaMainFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rpwaDict_867_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaMainFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rpwaDict_867_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrpwaMainFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rpwaDict_867_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrpwaMainFrame::DeclFileLine) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncrpwaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalrpwaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcrpwaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__rpwaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__rpwaDictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_Tfit_options = { "Tfit_options" , 115 , -1 };
G__linked_taginfo G__rpwaDictLN_TrpwaFitOptionsFrame = { "TrpwaFitOptionsFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEintcOTrpwaBinInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOTrpwaBinInfogRsPgRsPgR = { "map<int,TrpwaBinInfo,less<int>,allocator<pair<const int,TrpwaBinInfo> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TrpwaSessionManager = { "TrpwaSessionManager" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGComboBox = { "TGComboBox" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR = { "vector<TWaveSelection,allocator<TWaveSelection> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TWaveSelection,allocator<TWaveSelection> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TrpwaWaveSelectFrame = { "TrpwaWaveSelectFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR = { "vector<TGTextButton*,allocator<TGTextButton*> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGTextButton*,allocator<TGTextButton*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR = { "map<int,vector<TGTextButton*,allocator<TGTextButton*> >,less<int>,allocator<pair<const int,vector<TGTextButton*,allocator<TGTextButton*> > > > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR = { "map<string,vector<TGTextButton*,allocator<TGTextButton*> >,less<string>,allocator<pair<const string,vector<TGTextButton*,allocator<TGTextButton*> > > > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TGDoubleHSlider = { "TGDoubleHSlider" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TMultiGraph = { "TMultiGraph" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR = { "map<string,TTree*,less<string>,allocator<pair<const string,TTree*> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOTphasegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTphasegraphgRsPgRsPgR = { "map<string,Tphasegraph,less<string>,allocator<pair<const string,Tphasegraph> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOTGraphErrorsmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTGraphErrorsmUgRsPgRsPgR = { "map<string,TGraphErrors*,less<string>,allocator<pair<const string,TGraphErrors*> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOTwavegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTwavegraphgRsPgRsPgR = { "map<string,Twavegraph,less<string>,allocator<pair<const string,Twavegraph> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_maplEstringcOTfitresultmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTfitresultmUgRsPgRsPgR = { "map<string,Tfitresult*,less<string>,allocator<pair<const string,Tfitresult*> > >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TrpwaPlotAmpsFrame = { "TrpwaPlotAmpsFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR = { "vector<TColor_struct,allocator<TColor_struct> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlETColor_structcOallocatorlETColor_structgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TColor_struct,allocator<TColor_struct> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_TrpwaMainFrame = { "TrpwaMainFrame" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR = { "vector<TGProgressBar*,allocator<TGProgressBar*> >" , 99 , -1 };
G__linked_taginfo G__rpwaDictLN_reverse_iteratorlEvectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGProgressBar*,allocator<TGProgressBar*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablerpwaDict() {
  G__rpwaDictLN_TClass.tagnum = -1 ;
  G__rpwaDictLN_TBuffer.tagnum = -1 ;
  G__rpwaDictLN_TMemberInspector.tagnum = -1 ;
  G__rpwaDictLN_TObject.tagnum = -1 ;
  G__rpwaDictLN_string.tagnum = -1 ;
  G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_TGObject.tagnum = -1 ;
  G__rpwaDictLN_TQObject.tagnum = -1 ;
  G__rpwaDictLN_TGWindow.tagnum = -1 ;
  G__rpwaDictLN_TGPicture.tagnum = -1 ;
  G__rpwaDictLN_TGFrame.tagnum = -1 ;
  G__rpwaDictLN_TGCompositeFrame.tagnum = -1 ;
  G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__rpwaDictLN_TGTextButton.tagnum = -1 ;
  G__rpwaDictLN_TGVerticalFrame.tagnum = -1 ;
  G__rpwaDictLN_TGMainFrame.tagnum = -1 ;
  G__rpwaDictLN_TGTransientFrame.tagnum = -1 ;
  G__rpwaDictLN_TGGroupFrame.tagnum = -1 ;
  G__rpwaDictLN_TGButton.tagnum = -1 ;
  G__rpwaDictLN_TGCheckButton.tagnum = -1 ;
  G__rpwaDictLN_TGTextEntry.tagnum = -1 ;
  G__rpwaDictLN_TGNumberEntry.tagnum = -1 ;
  G__rpwaDictLN_Tfit_options.tagnum = -1 ;
  G__rpwaDictLN_TrpwaFitOptionsFrame.tagnum = -1 ;
  G__rpwaDictLN_TCanvas.tagnum = -1 ;
  G__rpwaDictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__rpwaDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_maplEintcOTrpwaBinInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOTrpwaBinInfogRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_TrpwaSessionManager.tagnum = -1 ;
  G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_TGComboBox.tagnum = -1 ;
  G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_TrpwaWaveSelectFrame.tagnum = -1 ;
  G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_TTree.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_TGDoubleHSlider.tagnum = -1 ;
  G__rpwaDictLN_TMultiGraph.tagnum = -1 ;
  G__rpwaDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__rpwaDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOTphasegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTphasegraphgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOTGraphErrorsmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTGraphErrorsmUgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOTwavegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTwavegraphgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_maplEstringcOTfitresultmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTfitresultmUgRsPgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_TrpwaPlotAmpsFrame.tagnum = -1 ;
  G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlETColor_structcOallocatorlETColor_structgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rpwaDictLN_TrpwaMainFrame.tagnum = -1 ;
  G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR.tagnum = -1 ;
  G__rpwaDictLN_reverse_iteratorlEvectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablerpwaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_string);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGPicture);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGTransientFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGButton);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_Tfit_options);
   G__tagtable_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaFitOptionsFrame),sizeof(TrpwaFitOptionsFrame),-1,62464,(char*)NULL,G__setup_memvarTrpwaFitOptionsFrame,G__setup_memfuncTrpwaFitOptionsFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEintcOTrpwaBinInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOTrpwaBinInfogRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TrpwaSessionManager);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGComboBox);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlETWaveSelectioncOallocatorlETWaveSelectiongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaWaveSelectFrame),sizeof(TrpwaWaveSelectFrame),-1,62464,(char*)NULL,G__setup_memvarTrpwaWaveSelectFrame,G__setup_memfuncTrpwaWaveSelectFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETGTextButtonmUcOallocatorlETGTextButtonmUgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TGDoubleHSlider);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TMultiGraph);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOTTreemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTTreemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOTphasegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTphasegraphgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOTGraphErrorsmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTGraphErrorsmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOTwavegraphcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTwavegraphgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_maplEstringcOTfitresultmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTfitresultmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaPlotAmpsFrame),sizeof(TrpwaPlotAmpsFrame),-1,62464,(char*)NULL,G__setup_memvarTrpwaPlotAmpsFrame,G__setup_memfuncTrpwaPlotAmpsFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlETColor_structcOallocatorlETColor_structgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlETColor_structcOallocatorlETColor_structgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__rpwaDictLN_TrpwaMainFrame),sizeof(TrpwaMainFrame),-1,62464,(char*)NULL,G__setup_memvarTrpwaMainFrame,G__setup_memfuncTrpwaMainFrame);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_vectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__rpwaDictLN_reverse_iteratorlEvectorlETGProgressBarmUcOallocatorlETGProgressBarmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuprpwaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuprpwaDict()");
  G__set_cpp_environmentrpwaDict();
  G__cpp_setup_tagtablerpwaDict();

  G__cpp_setup_inheritancerpwaDict();

  G__cpp_setup_typetablerpwaDict();

  G__cpp_setup_memvarrpwaDict();

  G__cpp_setup_memfuncrpwaDict();
  G__cpp_setup_globalrpwaDict();
  G__cpp_setup_funcrpwaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncrpwaDict();
  return;
}
class G__cpp_setup_initrpwaDict {
  public:
    G__cpp_setup_initrpwaDict() { G__add_setup_func("rpwaDict",(G__incsetup)(&G__cpp_setuprpwaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initrpwaDict() { G__remove_setup_func("rpwaDict"); }
};
G__cpp_setup_initrpwaDict G__cpp_setup_initializerrpwaDict;

